@page "/"
@using TestAssignmentWebApp.Components.List
@using TestAssignmentWebApp.Components.Modal
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="card w-50" tabindex="0">
    <div class="card-body">
        <h3 class="card-title">HTML Editor</h3>
        <HtmlEditor @ref="quilElementReference" ShowToolbar="@_showToolbar" @bind-Value="QuillHtmlContent" Id="htmlEditor">
            <ToolbarContent>
                <select class="ql-header">
                    <option selected=""></option>
                    <option value="1"></option>
                    <option value="2"></option>
                    <option value="3"></option>
                </select>
                <span class="ql-formats">
                    <button class="ql-bold"></button>
                    <button class="ql-italic"></button>
                    <button class="ql-underline"></button>
                </span>
                <span class="ql-formats">
                    <button class="ql-link"></button>
                    <button class="ql-image"></button>
                </span>
            </ToolbarContent>
            <EditorContent>
            </EditorContent>
        </HtmlEditor>
    </div>
    <div class="card-footer" id="card-element">
        <h3> Live preview area</h3>
        <div style="height: 5px; width: 100%;"></div>
        <div style="width: 100%; background-color: #dcdcdc;">
            @((MarkupString)QuillHtmlContent)
            @QuillHtmlContent
        </div>

        <button class="btn btn-primary" @onclick="ToggleToolbar">
            @(_showToolbar ? "Hide" : "Show") Toolbar
        </button>
        <button class="btn btn-primary" @onclick="() => ModalDialog?.Open()">
            Click me!
        </button>
    </div>

    <ModalDialog @ref="ModalDialog" Title="@ModalTitle" TargetElement="card-element">
        <ListComponent
            DataSource="_countries"
            ButtonEvent="(string country) => InsertCountryAtCursor(country)"
            />
    </ModalDialog>
</div>

@code {
    private bool _showToolbar = true;

    private const string ModalTitle = "Country List";

    private readonly List<string> _countries = ["USA", "Canada", "Mexico", "UK", "Germany"];

    private void ToggleToolbar() => _showToolbar = !_showToolbar;

    private ModalDialog? ModalDialog { get; set; }

    private HtmlEditor? quilElementReference;

    private string? QuillHtmlContent { get; set; } = string.Empty;

    private async Task InsertCountryAtCursor(string country)
    {
        if (quilElementReference != null)
        {
            await quilElementReference.InsertTextAtCursor(country);
        }
    }
}